package Clases;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 * Clase que gestiona el movimiento del personaje en un panel.
 * Implementa KeyListener para responder a eventos de teclado.
 */
public class Movimientopj extends JPanel implements KeyListener {
    public ImageIcon p = new ImageIcon("personajeprueba.jpg");
    public JLabel pj = new JLabel(p);

    /**
     * Constructor de Movimientopj.
     * Inicializa el panel y añade el listener de teclado y el personaje.
     */
    public Movimientopj() {
        addKeyListener(this);
        setFocusable(true);
        add(pj);
    }

    /**
     * Gestiona eventos de teclado cuando una tecla es tecleada.
     * Actualiza la posición del personaje en el panel según la tecla presionada.
     *
     * @param e Evento de teclado.
     */
    @Override
    public void keyTyped(KeyEvent e) {
        if (e.getExtendedKeyCode() == KeyEvent.VK_UP) {
            pj.setLocation(pj.getX(), pj.getY() - 5);
        }
        if (e.getExtendedKeyCode() == KeyEvent.VK_DOWN) {
            pj.setLocation(pj.getX(), pj.getY() + 5);
        }
        if (e.getExtendedKeyCode() == KeyEvent.VK_LEFT) {
            pj.setLocation(pj.getX() - 5, pj.getY());
        }
        if (e.getExtendedKeyCode() == KeyEvent.VK_RIGHT) {
            pj.setLocation(pj.getX()+ 5, pj.getY() - 5);
        }
    }

    /**
     * Gestiona eventos de teclado cuando una tecla es presionada.
     * Permite el movimiento del personaje con las teclas WASD o las flechas del teclado.
     *
     * @param e Evento de teclado.
     */
    @Override
    public void keyPressed(KeyEvent e) {
        if (e.getKeyChar() == 'w'||e.getKeyChar() == 'W'|| e.getExtendedKeyCode() == KeyEvent.VK_UP) {
            pj.setLocation(pj.getX(), pj.getY() - 5);
        }
        if (e.getKeyChar() == 's'||e.getKeyChar() == 'S'|| e.getExtendedKeyCode() == KeyEvent.VK_DOWN) {
            pj.setLocation(pj.getX(), pj.getY() + 5);
        }
        if (e.getKeyChar() == 'a'||e.getKeyChar() == 'A'|| e.getExtendedKeyCode() == KeyEvent.VK_LEFT) {
            pj.setLocation(pj.getX() - 5, pj.getY());
        }
        if (e.getKeyChar() == 'd'||e.getKeyChar() == 'D'|| e.getExtendedKeyCode() == KeyEvent.VK_RIGHT) {
            pj.setLocation(pj.getX()+ 5, pj.getY());
        }
    }

    /**
     * Gestiona eventos de teclado cuando una tecla es liberada.
     * Actualmente este método no implementa ninguna funcionalidad.
     *
     * @param e Evento de teclado.
     */
    @Override
    public void keyReleased(KeyEvent e) {
        // No implementado.
    }
}
